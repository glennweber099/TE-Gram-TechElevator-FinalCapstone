{"remainingRequest":"C:\\Users\\GWeber\\git\\c-final-capstone-te-gram-team-hat\\final-capstone\\Sample_Projects\\te-snippets\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\GWeber\\git\\c-final-capstone-te-gram-team-hat\\final-capstone\\Sample_Projects\\te-snippets\\frontend\\src\\views\\SaveSnippet.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\GWeber\\git\\c-final-capstone-te-gram-team-hat\\final-capstone\\Sample_Projects\\te-snippets\\frontend\\src\\views\\SaveSnippet.vue","mtime":1575906095541},{"path":"C:\\Users\\GWeber\\git\\c-final-capstone-te-gram-team-hat\\final-capstone\\Sample_Projects\\te-snippets\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\GWeber\\git\\c-final-capstone-te-gram-team-hat\\final-capstone\\Sample_Projects\\te-snippets\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\GWeber\\git\\c-final-capstone-te-gram-team-hat\\final-capstone\\Sample_Projects\\te-snippets\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\GWeber\\git\\c-final-capstone-te-gram-team-hat\\final-capstone\\Sample_Projects\\te-snippets\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport DefaultLayout from '@/layouts/DefaultLayout';\r\nimport auth from '@/auth';\r\n\r\nexport default {\r\n  name: 'AddSnippet',\r\n  components: {\r\n    DefaultLayout,\r\n  },\r\n  data() {\r\n    return {\r\n      snippet: {\r\n        description: '',\r\n        filename: '',\r\n        tags: '',\r\n        sourceCode: '',\r\n      },\r\n      errors: [],\r\n      formSubmitted: false,\r\n    };\r\n  },\r\n  methods: {\r\n    onSubmit() {\r\n      this.formSubmitted = true;\r\n      this.validateForm();\r\n      // if all fields are valid submit the form\r\n      if (!this.errors.length) {\r\n        const snippetId = this.$route.params.id;\r\n        const apiEndpoint = this.isEditForm ? `api/snippets/${snippetId}` : 'api/snippets/';\r\n        fetch(`${process.env.VUE_APP_REMOTE_API}/${apiEndpoint}`, {\r\n          method: this.isEditForm ? 'PUT' : 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer ' + auth.getToken(),\r\n          },\r\n          body: JSON.stringify(this.snippet),\r\n        })\r\n          .then((response) => {\r\n            if (response.ok) {\r\n              this.$router.push({ path: '/' });\r\n            }\r\n          })\r\n          .catch((err) => console.error(err));\r\n      }\r\n    },\r\n    validateForm() {\r\n      this.errors = [];\r\n      Object.entries(this.snippet).forEach((field) => {\r\n        if (field[1] === '') {\r\n          this.errors.push(field[0]);\r\n        }\r\n      });\r\n      // the filename must include an extension\r\n      console.log(this.snippet.filename.includes('.'));\r\n      if (!this.snippet.filename.includes('.')) {\r\n        this.errors.push('filename');\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    if (this.isEditForm) {\r\n      const snippetId = this.$route.params.id;\r\n      fetch(`${process.env.VUE_APP_REMOTE_API}/api/snippets/${snippetId}`, {\r\n        method: 'GET',\r\n        headers: new Headers({\r\n          Authorization: 'Bearer ' + auth.getToken(),\r\n        }),\r\n        credentials: 'same-origin',\r\n      })\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            return response.json();\r\n          } else {\r\n            // no reason to be here send them back to the list view\r\n            this.$router.push({ path: '/' });\r\n          }\r\n        })\r\n        .then((data) => {\r\n          this.snippet = data;\r\n        })\r\n        .catch((err) => console.error(err));\r\n    }\r\n  },\r\n  computed: {\r\n    isEditForm() {\r\n      return this.$route.params.id === undefined ? false : true;\r\n    },\r\n    getPageTitle() {\r\n      return this.isEditForm ? 'Edit Snippet' : 'Add New Snippet';\r\n    },\r\n    getPageDescription() {\r\n      return this.editForm\r\n        ? 'Use this form to edit a snippet in your collection.'\r\n        : 'Use this form to add a snippet to your collection.';\r\n    },\r\n  },\r\n};\r\n",{"version":3,"sources":["SaveSnippet.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SaveSnippet.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <default-layout>\r\n    <h1>{{ getPageTitle }}</h1>\r\n    <p>{{ getPageDescription }}</p>\r\n    <form class=\"needs-validation\" @submit.prevent=\"onSubmit\" novalidate>\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"description\"\r\n          class=\"form-control\"\r\n          :class=\"{ 'is-invalid': errors.includes('description') }\"\r\n          id=\"description\"\r\n          placeholder=\"Snippet Description...\"\r\n          v-model=\"snippet.description\"\r\n        />\r\n        <div class=\"invalid-feedback\">Please provide a valid description.</div>\r\n      </div>\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n          <div class=\"form-row\">\r\n            <div class=\"col-4\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                :class=\"{ 'is-invalid': errors.includes('filename') }\"\r\n                id=\"filename\"\r\n                placeholder=\"Filename including extension...\"\r\n                v-model=\"snippet.filename\"\r\n              />\r\n              <div class=\"invalid-feedback\">\r\n                Please provide a valid filename with an extension.\r\n              </div>\r\n            </div>\r\n            <div class=\"col-4\">&nbsp;</div>\r\n            <div class=\"col-4\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                :class=\"{ 'is-invalid': errors.includes('tags') }\"\r\n                id=\"tags\"\r\n                placeholder=\"Tags (Comma Seperated)\"\r\n                v-model=\"snippet.tags\"\r\n              />\r\n              <div class=\"invalid-feedback\">Please enter at least one tag.</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <textarea\r\n          class=\"form-control\"\r\n          :class=\"{ 'is-invalid': errors.includes('sourceCode') }\"\r\n          id=\"sourceCode\"\r\n          rows=\"20\"\r\n          v-model=\"snippet.sourceCode\"\r\n        ></textarea>\r\n        <div class=\"invalid-feedback\">\r\n          Please provide the snippet source code.\r\n        </div>\r\n      </div>\r\n      <div class=\"float-right\">\r\n        <button type=\"submit\" class=\"btn btn-primary mb-2\">Save Snippet</button>\r\n      </div>\r\n    </form>\r\n  </default-layout>\r\n</template>\r\n\r\n<script>\r\nimport DefaultLayout from '@/layouts/DefaultLayout';\r\nimport auth from '@/auth';\r\n\r\nexport default {\r\n  name: 'AddSnippet',\r\n  components: {\r\n    DefaultLayout,\r\n  },\r\n  data() {\r\n    return {\r\n      snippet: {\r\n        description: '',\r\n        filename: '',\r\n        tags: '',\r\n        sourceCode: '',\r\n      },\r\n      errors: [],\r\n      formSubmitted: false,\r\n    };\r\n  },\r\n  methods: {\r\n    onSubmit() {\r\n      this.formSubmitted = true;\r\n      this.validateForm();\r\n      // if all fields are valid submit the form\r\n      if (!this.errors.length) {\r\n        const snippetId = this.$route.params.id;\r\n        const apiEndpoint = this.isEditForm ? `api/snippets/${snippetId}` : 'api/snippets/';\r\n        fetch(`${process.env.VUE_APP_REMOTE_API}/${apiEndpoint}`, {\r\n          method: this.isEditForm ? 'PUT' : 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer ' + auth.getToken(),\r\n          },\r\n          body: JSON.stringify(this.snippet),\r\n        })\r\n          .then((response) => {\r\n            if (response.ok) {\r\n              this.$router.push({ path: '/' });\r\n            }\r\n          })\r\n          .catch((err) => console.error(err));\r\n      }\r\n    },\r\n    validateForm() {\r\n      this.errors = [];\r\n      Object.entries(this.snippet).forEach((field) => {\r\n        if (field[1] === '') {\r\n          this.errors.push(field[0]);\r\n        }\r\n      });\r\n      // the filename must include an extension\r\n      console.log(this.snippet.filename.includes('.'));\r\n      if (!this.snippet.filename.includes('.')) {\r\n        this.errors.push('filename');\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    if (this.isEditForm) {\r\n      const snippetId = this.$route.params.id;\r\n      fetch(`${process.env.VUE_APP_REMOTE_API}/api/snippets/${snippetId}`, {\r\n        method: 'GET',\r\n        headers: new Headers({\r\n          Authorization: 'Bearer ' + auth.getToken(),\r\n        }),\r\n        credentials: 'same-origin',\r\n      })\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            return response.json();\r\n          } else {\r\n            // no reason to be here send them back to the list view\r\n            this.$router.push({ path: '/' });\r\n          }\r\n        })\r\n        .then((data) => {\r\n          this.snippet = data;\r\n        })\r\n        .catch((err) => console.error(err));\r\n    }\r\n  },\r\n  computed: {\r\n    isEditForm() {\r\n      return this.$route.params.id === undefined ? false : true;\r\n    },\r\n    getPageTitle() {\r\n      return this.isEditForm ? 'Edit Snippet' : 'Add New Snippet';\r\n    },\r\n    getPageDescription() {\r\n      return this.editForm\r\n        ? 'Use this form to edit a snippet in your collection.'\r\n        : 'Use this form to add a snippet to your collection.';\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.btn {\r\n  margin-top: 20px;\r\n}\r\n::placeholder {\r\n  color: rgb(187, 187, 187) !important;\r\n}\r\ntextarea {\r\n  border: none !important;\r\n}\r\n#sourceCode {\r\n  font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, Courier, monospace;\r\n  font-size: 12px;\r\n  line-height: 1.5;\r\n}\r\n.invalid-feedback {\r\n  text-align: left;\r\n}\r\n</style>\r\n"]}]}