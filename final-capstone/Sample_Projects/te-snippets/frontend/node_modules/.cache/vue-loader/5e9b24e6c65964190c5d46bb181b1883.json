{"remainingRequest":"C:\\Users\\GWeber\\git\\c-final-capstone-te-gram-team-hat\\final-capstone\\Sample_Projects\\te-snippets\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\GWeber\\git\\c-final-capstone-te-gram-team-hat\\final-capstone\\Sample_Projects\\te-snippets\\frontend\\src\\views\\ViewSnippet.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\GWeber\\git\\c-final-capstone-te-gram-team-hat\\final-capstone\\Sample_Projects\\te-snippets\\frontend\\src\\views\\ViewSnippet.vue","mtime":1575906095542},{"path":"C:\\Users\\GWeber\\git\\c-final-capstone-te-gram-team-hat\\final-capstone\\Sample_Projects\\te-snippets\\frontend\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\GWeber\\git\\c-final-capstone-te-gram-team-hat\\final-capstone\\Sample_Projects\\te-snippets\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\GWeber\\git\\c-final-capstone-te-gram-team-hat\\final-capstone\\Sample_Projects\\te-snippets\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\GWeber\\git\\c-final-capstone-te-gram-team-hat\\final-capstone\\Sample_Projects\\te-snippets\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\GWeber\\git\\c-final-capstone-te-gram-team-hat\\final-capstone\\Sample_Projects\\te-snippets\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.lead {\r\n  margin-bottom: 0px;\r\n}\r\npre {\r\n  margin-top: 20px !important;\r\n}\r\n",{"version":3,"sources":["ViewSnippet.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA;AACA;AACA;AACA","file":"ViewSnippet.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <default-layout>\r\n    <div id=\"snippet\">\r\n      <h1>{{ snippet.filename }}</h1>\r\n      <p>{{ snippet.description }}</p>\r\n\r\n      <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n          <span class=\"badge badge-info\" v-for=\"tag in snippet.tags.split(',')\" :key=\"tag\">{{\r\n            tag\r\n          }}</span>\r\n        </div>\r\n        <div class=\"col\">\r\n          <router-link\r\n            :to=\"{ name: 'save', params: { id: snippet.id } }\"\r\n            tag=\"button\"\r\n            class=\"btn btn-outline-primary btn-sm float-right\"\r\n          >\r\n            Edit Snippet\r\n          </router-link>\r\n        </div>\r\n      </div>\r\n      <pre v-highlightjs=\"snippet.sourceCode\"><code :class=\"getCodeLanguage\"></code></pre>\r\n      <router-link to=\"/\" tag=\"button\" class=\"btn btn-primary\">Go Back</router-link>\r\n      <br /><br />\r\n    </div>\r\n  </default-layout>\r\n</template>\r\n\r\n<script>\r\nimport DefaultLayout from '@/layouts/DefaultLayout';\r\nimport auth from '@/auth';\r\n\r\nexport default {\r\n  name: 'ViewSnippet',\r\n  components: {\r\n    DefaultLayout,\r\n  },\r\n  data() {\r\n    return {\r\n      sourcecode: '',\r\n      snippet: {\r\n        description: '',\r\n        filename: '',\r\n        sourceCode: '',\r\n        tags: '',\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    const snippetId = this.$route.params.id;\r\n    fetch(`${process.env.VUE_APP_REMOTE_API}/api/snippets/${snippetId}`, {\r\n      method: 'GET',\r\n      headers: new Headers({\r\n        Authorization: 'Bearer ' + auth.getToken(),\r\n      }),\r\n      credentials: 'same-origin',\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          // no reason to be here send them back to the list view\r\n          this.$router.push({ path: '/' });\r\n        }\r\n      })\r\n      .then((data) => {\r\n        this.snippet = data;\r\n      })\r\n      .catch((err) => console.error(err));\r\n  },\r\n  computed: {\r\n    getCodeLanguage() {\r\n      return this.snippet.filename.split('.')[1];\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.lead {\r\n  margin-bottom: 0px;\r\n}\r\npre {\r\n  margin-top: 20px !important;\r\n}\r\n</style>\r\n"]}]}